<?xml version="1.0" encoding="UTF-8"?>
<protocol name="panel">
  <copyright>
    Copyright (C) 2014 Pier Luigi Fiorini

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  </copyright>

  <interface name="kf5_panel_manager" version="1">
    <description summary="create and manage panels">
      This interface is used to manage panels.

      It is used by KF5 powered Wayland shells to communicate with
      the compositor and can only be bound one time.
    </description>

    <request name="set_panel">
      <description summary="set panel role">
        The surface set by this request will receive the panel role.
        Panels display launchers, buttons and other kind of elements.
      </description>
      <arg name="id" type="new_id" interface="kf5_panel"/>
      <arg name="surface" type="object" interface="wl_surface"/>
    </request>
  </interface>

  <interface name="kf5_panel" version="1">
    <description summary="create and manage panels">
      This interface is used to manage panels.
    </description>

    <enum name="edge">
      <entry name="left" value="0"/>
      <entry name="top" value="1"/>
      <entry name="right" value="2"/>
      <entry name="bottom" value="3"/>
    </enum>

    <enum name="visibility">
      <entry name="always-visible" value="0"/>
      <entry name="auto-hide" value="1"/>
      <entry name="windows-can-cover" value="2"/>
      <entry name="window-go-below" value="3"/>
    </enum>

    <enum name="alignment">
      <entry name="left" value="0"/>
      <entry name="center" value="1"/>
      <entry name="right" value="2"/>
    </enum>

    <request name="set_visibility">
      <description summary="set panel visibility">
        Set panel visibility.
        See visibility enum.
      </description>
      <arg name="visibility" type="uint"/>
    </request>

    <request name="set_alignment">
      <description summary="set panel alignment">
        Set panel alignment.
      </description>
      <arg name="alignment" type="uint"/>
    </request>

    <request name="set_offset">
      <description summary="set panel offset">
        Set panel offset.
      </description>
      <arg name="offset" type="uint"/>
    </request>

    <request name="set_thickness">
      <description summary="set panel thickness">
        Set panel size.
      </description>
      <arg name="thickness" type="uint"/>
    </request>

    <request name="set_length">
      <description summary="set panel length">
        Set panel length.
      </description>
      <arg name="length" type="uint"/>
    </request>

    <request name="set_min_length">
      <description summary="set minimum length">
        Set minimum length of this panel.
      </description>
      <arg name="min_length" type="uint"/>
    </request>

    <request name="set_max_length">
      <description summary="set maximum length">
        Set maximum length of this panel.
      </description>
      <arg name="max_length" type="uint"/>
    </request>

    <request name="dock">
      <description summary="dock the panel">
        Set panel position on the specified output according to edge,
        alignment and offset.
      </description>
      <arg name="edge" type="uint"/>
      <arg name="output" type="object" interface="wl_output"/>
    </request>

    <event name="docked">
      <description summary="panel is docked">
        Emitted when the panel is docked.
      </description>
    </event>
  </interface>
</protocol>
