<?xml version="1.0" encoding="UTF-8"?>
<protocol name="window-management">
  <copyright><![CDATA[
    Copyright (C) 2013-2014 Pier Luigi Fiorini

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 2.1 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this program.  If not, see <http://www.gnu.org/licenses/>.
  ]]></copyright>

  <interface name="org_kde_plasma_window_management" version="1">
    <description summary="application windows management">
      This interface manages application windows.
      It provides requests to show and hide the desktop and emits
      an event every time a window is created so that the client can
      use it to manage the window.

      Only one client can bind this interface at a time.
    </description>

    <enum name="state">
      <entry name="inactive" value="0x0"/>
      <entry name="active" value="0x1"/>
      <entry name="minimized" value="0x2"/>
      <entry name="maximized" value="0x3"/>
      <entry name="fullscreen" value="0x4"/>
      <entry name="keep_above" value="0x5"/>
      <entry name="keep_below" value="0x6"/>
      <entry name="shaded" value="0x7"/>
    </enum>

    <request name="show_desktop">
      <description summary="reveal the desktop">
        Tell the compositor to reveal the desktop.
      </description>
    </request>

    <request name="hide_desktop">
      <description summary="hide desktop">
        Tell the compositor to restore windows exactly as it was
        before calling org_kde_plasma_window_management.show_desktop.
      </description>
    </request>

    <event name="window_created">
      <description summary="notify the client that a window was mapped">
        This event will be sent immediately after a window is mapped.
        A new org_kde_plasma_window object is created and it will be used to manage
        this window.

        Values for state argument are described by org_kde_plasma_window_management.state.
        They are used in a bitfield.
      </description>
      <arg name="id" type="new_id" interface="org_kde_plasma_window"/>
      <arg name="flags" type="uint" summary="bitfield of state flags"/>
      <arg name="title" type="string" summary="window title"/>
      <arg name="app_id" type="string" summary="application identifier"/>
    </event>
  </interface>

  <interface name="org_kde_plasma_window" version="1">
    <description summary="interface to control application windows">
      Manages and control an application window.

      Only one client can bind this interface at a time.
    </description>

    <request name="set_state">
      <description summary="set window state">
        Set window state.

        Values for state argument are described by org_kde_plasma_window_management.state
        and can be used together in a bitfield.
      </description>
      <arg name="flags" type="uint" summary="bitfield of state flags"/>
    </request>

    <request name="set_virtual_desktop">
      <description summary="map window on a virtual desktop">
        Maps the window to a different virtual desktop.

        To show the window on all virtual desktops, call the
        org_kde_plasma_window.set_state request and specify a on_all_desktops
        state in the bitfield.
      </description>
      <arg name="number" type="uint" summary="zero based virtual desktop number"/>
    </request>

    <request name="close">
      <description summary="close window">
        Close this window.
      </description>
    </request>

    <event name="title_changed">
      <description summary="window title has been changed">
        This event will be sent as soon as the window title is changed.
      </description>
      <arg name="title" type="string" summary="window title"/>
    </event>

    <event name="app_id_changed">
      <description summary="application identifier has been changed">
        This event will be sent as soon as the application
        identifier is changed.
      </description>
      <arg name="app_id" type="string"/>
    </event>

    <event name="state_changed">
      <description summary="window state has been changed">
        This event will be sent as soon as the window state changes.

        Values for state argument are described by org_kde_plasma_window_management.state.
      </description>
      <arg name="flags" type="uint" summary="bitfield of state flags"/>
    </event>

    <event name="virtual_desktop_changed">
      <description summary="window was moved to another workspace">
        This event will be sent when a window is moved to another
        virtual desktop.

        It is not sent if it becomes visible on all virtual desktops though.
      </description>
      <arg name="number" type="int" summary="zero based virtual desktop number"/>
    </event>

    <event name="unmapped">
      <description summary="window's surface was unmapped">
        This event will be sent immediately after the window is closed
        and its surface is unmapped.
      </description>
    </event>
  </interface>
</protocol>
